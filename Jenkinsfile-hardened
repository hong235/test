pipeline
{
    post
    {
        always
        {
            cleanWs deleteDirs: true, notFailBuild: true
        }
    }
	agent
    {
        dockerfile
        {
            filename 'Dockerfile-Jenkins-hardened'
            additionalBuildArgs '''\
                --build-arg ALKEMIST_LICENSE_KEY=$ALKEMIST_LICENSE_KEY\
                --build-arg LFR_ROOT_PATH=$LFR_ROOT_PATH\
            '''
            args '-u root:sudo'
        }
    }
    environment
    {
        REDIS_VERSION = "redis-stable"
    }
	stages
	{
		stage("Download Source")
		{
			steps
			{
				sh '''
                    wget http://download.redis.io/releases/${REDIS_VERSION}.tar.gz
				'''
			}
		}
		stage("Extract Source")
		{
			steps
			{
				sh '''
                    tar xzf ${REDIS_VERSION}.tar.gz
				'''
			}
		}
		stage("Build")
		{
			steps
			{
				sh '''
					cd ${REDIS_VERSION}
                    ${LFR_ROOT_PATH}/scripts/lfr-helper.sh make -j$(nproc)
				'''
			}
		}
        stage("Smoke Test")
        {
            steps
            {
                sh '''
                    cd ${REDIS_VERSION}/src
                    ./redis-server --version
                '''
            }
        }
        stage("Create Archive")
        {
            steps
            {
                sh '''
                    cp /usr/local/lib/liblfr.so ${REDIS_VERSION}/liblfr.so
                    tar -czf redis.tar.gz ${REDIS_VERSION}
                '''
            }
        }
		stage("Push Redis to Artifactory")
		{
			steps
			{
				rtUpload(
					serverId: 'our-artifactory-server',
					spec: '''{
                        "files": [
                            {
                                "pattern":"redis.tar.gz",
                                "target":"generic-local/hardened/redis.tar.gz"
                            }
                        ]
                    }'''
				)
			}
		}
        stage("Upload Module to Artifactory")
        {
            steps
            {
                rtUpload(
                    serverId: 'our-artifactory-server',
					spec: '''{
                        "files": [
                            {
                                "pattern":"rejson.so",
                                "target":"generic-local/hardened/rejson.so"
                            }
                        ]
                    }''',
                )
            }
        }
	}
}
